// Next
import Head from "next/head";
import Link from "next/link";
// React
import React from "react";
// Providers
import { BiWorld } from "react-icons/bi";
import { BsClock, BsFillArrowLeftCircleFill } from "react-icons/bs";
import parse from "html-react-parser";
// Utils
import { daysBetween } from "@utils/daysBetween";
// Models
import { Job } from "../../models/job";
// Services
import { getList, getOne } from "@services/requests";
// Styled components
import { colors } from "@styles/variables/colors";
import { Container, Title, Footer, Text, Icon } from "@styles/shared/index";
import {
  JobContent,
  JobHeader,
  JobContainer,
  JobTitle,
  IconLink,
} from "@styles/components/job";

const defaultLocation = "New York, NY";

type PathType = {
  params: {
    id: string;
  };
};

export const getStaticProps = async ({ params }: any) => {
  const id = params && params.id ? (params.id as string) : "";
  try {
    const job = await getOne(process.env.API_URL || "", id);
    return {
      props: {
        job,
        revalidate: 60 * 5,
      },
    };
  } catch (error) {
    return {
      notFound: true,
    };
  }
};

export const getStaticPaths = async () => {
  const entries = await getList(
    process.env.API_URL || "",
    "1",
    `&location=${defaultLocation}`
  );
  const paths: PathType[] = entries.results.map((job: Job) => ({
    params: {
      id: job.id.toString(),
    },
  }));
  return {
    paths,
    fallback: "blocking",
  };
};

const JobPage = ({ job }: { job: Job }) => {
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <Title size="md">
          <strong>themuse </strong>Jobs
        </Title>
        <JobContainer>
          <JobHeader>
            <Link href="/" passHref>
              <IconLink>
                <BsFillArrowLeftCircleFill /> Back to search
              </IconLink>
            </Link>
            <Title size="sm" color={colors.title}>
              <strong>HOW TO APPLY</strong>
            </Title>
            <Text color={colors.text} colorSpan={colors.blue}>
              Please email a copy of your resume and online portfolio to
              <span> test@domain.pe.</span>
            </Text>
          </JobHeader>
          <JobContent>
            <Title color={colors.text}>
              <strong>{job.name}</strong>
            </Title>
            <Icon>
              <BsClock color={colors.placeholder} />
              <Text color={colors.placeholder}>
                {daysBetween(job.publication_date)}
              </Text>
            </Icon>
            <JobTitle>
              <Title size="md" color={colors.text}>
                <strong>{job.company.name}</strong>
              </Title>
              <Icon>
                <BiWorld color={colors.placeholder} />
                <div>
                  {job.locations.map((loc, index) => (
                    <Text key={index} color={colors.placeholder}>
                      {loc.name}
                    </Text>
                  ))}
                </div>
              </Icon>
            </JobTitle>
            <Text color={colors.text}>
              {parse(`<div>${job.contents}</div>`)}
            </Text>
          </JobContent>
        </JobContainer>
        <Footer>
          created by <strong>gbdeveloper</strong> - devChallenges.io
        </Footer>
      </Container>
    </div>
  );
};

export default JobPage;
